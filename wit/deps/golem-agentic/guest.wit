package golem:agentic;

interface guest {
  use common.{agent-error, agent-type, data-value};

  resource agent {
    get-id: func() -> string;

    invoke: func(method-name: string, input: data-value) -> result<data-value, agent-error>;

    get-definition: func() -> agent-type;
  }

  create-agent: func(agent-type: string, input: data-value) -> result<agent, agent-error>;

  get-agent: func(agent-type: string, agent-id: string) -> agent;

  discover-agents: func() -> list<agent>;

  discover-agent-types: func() -> list<agent-type>;
}

world agentic-guest {
  import golem:api/host@1.1.7;
  import golem:rpc/types@0.2.1;
  export guest;
}