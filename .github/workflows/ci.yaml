name: CI
on:
  push:
    tags:
      - "golem-ts-agentic-v*.*.*"
    branches:
      - main
  pull_request:

jobs:
  build-ts-agentic:
    runs-on: blacksmith
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup Rust
        run: rustup update stable --no-self-update && rustup default stable

      - name: Install wit-deps-cli for WIT deps management
        run: cargo install wit-deps-cli
     
      - name: Install wasm-rquickjs
        run: cargo install wasm-rquickjs-cli     

      - name: Install dependencies
        working-directory: ./golem-ts-agentic
        run: |
          pnpm install

      - name: Check code quality    
        working-directory: ./golem-ts-agentic
        run: |
          pnpm run lint || (
            echo "Linting issues found. Please fix them before proceeding. `npm run lint:fix` may help"
            exit 1
          )

      - name: Check code formatting
        working-directory: ./golem-ts-agentic
        run: |
          pnpm run format:check || (
            echo "Code formatting issues found. Please run 'npm run format' to fix them."
            exit 1
          )    

      - name: Build the package
        working-directory: ./golem-ts-agentic
        run: |
          pnpm run build

      - name: Run tests
        working-directory: ./golem-ts-agentic
        run: |
          pnpm run test    
         
  publish-ts-agentic:
    needs: build-ts-agentic
    runs-on: blacksmith
    if: startsWith(github.ref, 'refs/tags/golem-ts-agentic-v')
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      
      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Extract version from tag
        id: get_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG##*-v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set versions in all packages
        working-directory: ./golem-ts-agentic
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          for pkg in packages/golem-ts-types-core packages/golem-ts-typegen packages/golem-ts-sdk; do
            cd $pkg
            npm version $VERSION --no-git-tag-version
            cd ../../
          done

      - name: Install dependencies
        working-directory: ./golem-ts-agentic
        run: pnpm install

      - name: Build all packages
        working-directory: ./golem-ts-agentic
        run: pnpm -r run build

      - name: Publish all packages
        working-directory: ./golem-ts-agentic
        run: pnpm -r publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
